# File: devops/update-trivy-cache-azure-pipeline.yaml
# This pipeline downloads the latest Trivy vulnerability database and stores it in an Azure Blob Storage container.

schedules:
- cron: '0 2 * * 1-5'
  displayName: 'Daily at 4:00 AM (Mon-Fri)'
  branches:
    include: 
    - master
  always: true

trigger: none
pr: none

stages:
- stage: deployTrivyVulnerabilityDb
  displayName: 'Deploy latest Trivy vulnerability database'
  variables:
  - name: azureSubscription
    value: $(azureSubscription) # Set as variable in the pipeline on dev.azure.com
  - name: trivyCacheStorageAccount
    value: $(trivyCacheStorageAccount) # Set as variable in the pipeline on dev.azure.com
  - name: trivyVulnerabilityDbContainer
    value: 'trivy-vulnerability-db-cache'
  - name: trivyVulnerabilityDbZipName
    value: 'trivy-db.zip'
  - name : trivyCacheBlobName
    value: 'trivy-db.zip'
  - name: localTrivyDbPath
    value: $(Agent.TempDirectory)/trivy-db
  - name: trivyDbZipPath
    value: $(Agent.TempDirectory)/trivy-db.zip
  - name: localEmptyDir
    value: $(Agent.TempDirectory)/empty

  jobs:
  - job: retrieveTrivyVulnerabilityDb
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: none
    - powershell: |
        $localTrivyDbPath = "${{ variables.localTrivyDbPath }}"
        $localEmptyDir = "${{ variables.localEmptyDir }}"
        Write-Host "Creating empty directory '$localEmptyDir' to run trivy on"
        New-Item -ItemType Directory -Force -Path $localEmptyDir
        
        Write-Host "Creating local directory '$localTrivyDbPath' to store Trivy vulnerability DB"
        New-Item -ItemType Directory -Force -Path $localTrivyDbPath

    - template: ../scanWithRetryTask.yml
      parameters:
        dockerExtraArguments: "-v ${{ variables.localEmptyDir }}:/src -v ${{ variables.localTrivyDbPath }}:/mnt/trivy/cache"
        trivyExtraArguments: "filesystem /src --cache-dir /mnt/trivy/cache"
        trivyIgnoreFile: ""
        displayName: Scan empty

    - powershell: |
        $trivyDbZipPath = "${{ variables.trivyDbZipPath }}"
        $localTrivyDbPath = "${{ variables.localTrivyDbPath }}"
        Write-Host "Listing files in '$localTrivyDbPath'"
        Get-ChildItem -Path $localTrivyDbPath
        Write-Host "Creating zip file '$trivyDbZipPath' containing Trivy vulnerability DB"
        Compress-Archive -Path $localTrivyDbPath\* -DestinationPath $trivyDbZipPath
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: ${{ variables.trivyDbZipPath }}
        artifactName: trivy-db-zip
      displayName: 'Publish Trivy vulnerability database zip file'

  - task: AzureCLI@2
    displayName: 'Deploy Trivy cache'
    inputs:
      azureSubscription: ${{ variables.azureSubscription }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        echo "Uploading $trivyDbZipPath to blob storage..."
        az storage blob upload \
          --account-name ${{ variables.trivyCacheStorageAccount }} \
          --container-name ${{ variables.trivyCacheContainerName }} \
          --name ${{ variables.trivyCacheBlobName }} \
          --file $trivyDbZipPath \
          --auth-mode login
        echo "Blob deployed successfully."
