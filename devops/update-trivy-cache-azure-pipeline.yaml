# File: devops/update-trivy-cache-azure-pipeline.yaml
# This pipeline downloads the latest Trivy vulnerability database and stores it in an Azure Blob Storage container.

schedules:
- cron: '0 2 * * 1-5'
  displayName: 'Daily at 4:00 AM (Mon-Fri)'
  branches:
    include: 
    - master
  always: true

trigger: none
pr: none

stages:
- stage: deployTrivyCache
  displayName: 'Deploy latest Trivy vulnerability database'
  variables:
  - name: azureSubscription
    value: $(AzureSubscription) # Set as variable in the pipeline on dev.azure.com
  - name: trivyCacheStorageAccount
    value: $(TrivyCacheStorageAccount) # Set as variable in the pipeline on dev.azure.com
  - name: trivyVulnerabilityDbContainer
    value: 'trivy-vulnerability-db-cache'
  - name: trivyVulnerabilityDbZipName
    value: 'trivy-db.zip'
  - name : trivyCacheBlobName
    value: 'trivy-db.zip'
  - name: localTrivyCachePath
    value: $(Agent.TempDirectory)/trivy-db
  - name: trivyCacheZipPath
    value: $(Agent.TempDirectory)/trivy-db.zip
  - name: localEmptyDir
    value: $(Agent.TempDirectory)/empty

  jobs:
  - job: retrieveAndDeployTrivyCache
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - powershell: |
        $localTrivyCachePath = "${{ variables.localTrivyCachePath }}"
        $localEmptyDir = "${{ variables.localEmptyDir }}"
        Write-Host "Creating empty directory '$localEmptyDir' to run trivy on"
        New-Item -ItemType Directory -Force -Path $localEmptyDir
        
        Write-Host "Creating local directory '$localTrivyCachePath' to store Trivy vulnerability DB"
        New-Item -ItemType Directory -Force -Path $localTrivyCachePath
      displayName: 'Prepare directories'

    - template: ../scanWithRetryTask.yml
      parameters:
        dockerExtraArguments: "-v ${{ variables.localEmptyDir }}:/src -v ${{ variables.localTrivyCachePath }}:/mnt/trivy/cache"
        trivyExtraArguments: "filesystem /src --cache-dir /mnt/trivy/cache"
        trivyIgnoreFile: ""
        displayName: Scan empty
    
    - task: AzureCLI@2
      displayName: 'Deploy Trivy cache'
      inputs:
        azureSubscription: ${{ variables.azureSubscription }}
        scriptType: powershell
        scriptLocation: inlineScript
        inlineScript: |
          $trivyCacheZipPath = "${{ variables.trivyCacheZipPath }}"
          $localTrivyCachePath = "${{ variables.localTrivyCachePath }}"
          Write-Host "Listing files in '$localTrivyCachePath'"
          Get-ChildItem -Path $localTrivyCachePath
          
          Write-Host "Creating zip file '$trivyCacheZipPath' containing Trivy cache..."
          Compress-Archive -Path $localTrivyCachePath\* -DestinationPath $trivyCacheZipPath
          
          Write-Host "Uploading $trivyCacheZipPath to container '${{ variables.trivyCacheContainerName }}' in blob storage account '${{ variables.trivyCacheStorageAccount }}'"
          az storage blob upload \
            --account-name ${{ variables.trivyCacheStorageAccount }} \
            --container-name ${{ variables.trivyCacheContainerName }} \
            --name ${{ variables.trivyCacheBlobName }} \
            --file $trivyCacheZipPath \
            --auth-mode login
          echo "Blob deployed successfully."
